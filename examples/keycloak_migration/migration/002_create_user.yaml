up:
  name: create sample user in sample realm
  env:
    firstname: Sample
    lastname: User
  request:
    auth_name: keycloak
    method: POST
    url: "{{.env.kc_base}}/admin/realms/{{.env.realm}}/users"
    headers:
      - name: Authorization
        value: "{{.auth.keycloak}}"
    queries: [ ]
    body: |
      {
        "username": "{{.env.username}}",
        "enabled": true,
        "email": "{{.env.username}}@example.com",
        "firstName": "{{.env.firstname}}",
        "lastName": "{{.env.lastname}}",
        "credentials": [
          { "type": "password", "value": "{{.env.password}}", "temporary": false }
        ]
      }
  response:
    # 201: created, 409: already exists
    result_code: [ "201", "409" ]

down:
  name: delete sample user
  auth: keycloak
  env: { }
  # First, find the user's internal id by username, then delete by id
  find:
    request:
      auth_name: keycloak
      method: GET
      url: "{{.env.kc_base}}/admin/realms/{{.env.realm}}/users?username={{.env.username}}&exact=true"
      headers:
        - name: Authorization
          value: "{{.auth.keycloak}}"
      queries: [ ]
      body: ""
    response:
      result_code: [ "200" ]
      env_from:
        user_id: "0.id"
  method: DELETE
  url: "{{.env.kc_base}}/admin/realms/{{.env.realm}}/users/{{.user_id}}"
  headers:
    - name: Authorization
      value: "{{.auth.keycloak}}"
  queries: [ ]
  body: ""
