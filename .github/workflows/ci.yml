name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write

jobs:
  test:
    name: Go Test
    runs-on: ubuntu-latest
    env:
      CGO_ENABLED: 0
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: true

      - name: Show Go version
        run: go version

      - name: Download dependencies
        run: go mod download

      - name: Vet
        run: go vet ./...

      - name: Install staticcheck
        run: go install honnef.co/go/tools/cmd/staticcheck@latest

      - name: Staticcheck
        run: $(go env GOPATH)/bin/staticcheck ./...

      - name: Build (all packages)
        run: go build ./...

      - name: Run tests with coverage (exclude examples)
        env:
          CGO_ENABLED: 1
        run: go test -race -covermode=atomic -coverprofile=coverage.out $(go list ./... | grep -v '/examples/')

      - name: Show coverage summary
        run: go tool cover -func=coverage.out | tail -n 1

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage.out

      - name: Extract coverage percentage (push only)
        if: github.event_name == 'push'
        id: coverage
        shell: bash
        run: |
          set -euo pipefail
          LINE=$(go tool cover -func=coverage.out | tail -n 1)
          PCT=$(echo "$LINE" | awk '{print $3}')
          PCT_NUM=${PCT%%%}
          if [ "${PCT_NUM%.*}" -ge 80 ]; then COLOR=brightgreen; elif [ "${PCT_NUM%.*}" -ge 60 ]; then COLOR=yellow; else COLOR=red; fi
          echo "COVERAGE=$PCT_NUM" >> "$GITHUB_ENV"
          echo "BADGE_COLOR=$COLOR" >> "$GITHUB_ENV"

      - name: Generate coverage badge (push only)
        if: github.event_name == 'push'
        uses: emibcn/badge-action@v2
        with:
          label: Coverage
          status: "${{ env.COVERAGE }}%"
          color: "${{ env.BADGE_COLOR }}"
          path: coverage-badge.svg

      - name: Commit coverage badge (push only)
        if: github.event_name == 'push'
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore(ci): update coverage badge"
          file_pattern: coverage-badge.svg
