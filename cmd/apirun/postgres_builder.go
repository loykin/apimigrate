package main

import (
	"github.com/loykin/apirun"
	"github.com/loykin/apirun/internal/store/postgresql"
)

// PostgresStoreBuilder handles PostgreSQL-specific store configuration
type PostgresStoreBuilder struct {
	config postgresql.Config
}

// NewPostgresStoreBuilder creates a new PostgreSQL store builder
func NewPostgresStoreBuilder(config postgresql.Config) *PostgresStoreBuilder {
	return &PostgresStoreBuilder{config: config}
}

// Build creates a configured PostgreSQL store config with the given table names
func (b *PostgresStoreBuilder) Build(tableNames apirun.TableNames) *apirun.StoreConfig {
	// Generate DSN using postgresql.Config's ToMap() method
	pgConfig := b.config
	configMap := pgConfig.ToMap()

	// Use the DSN generated by ToMap()
	if dsn, ok := configMap["dsn"].(string); ok {
		pgConfig.DSN = dsn
	}

	// Convert to apirun type and create store config
	pg := apirun.PostgresConfig(pgConfig)
	return apirun.NewPostgresStoreConfig(&pg, tableNames)
}
